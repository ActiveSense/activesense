name: Build and Release

on:
  push:
  pull_request:  # Run on all pull requests
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rid: linux-x64
            output_name: activesense-linux-x64
          - os: windows-latest
            rid: win-x64
            output_name: activesense-windows-x64
          - os: macos-latest
            rid: osx-x64
            output_name: activesense-macos-x64
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    
    - name: Install dependencies
      run: dotnet restore
      working-directory: ./ActiveSense.Desktop
    
    - name: Build
      run: |
        dotnet publish ActiveSense.Desktop.csproj -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -o ./publish/${{ matrix.rid }}
      working-directory: ./ActiveSense.Desktop
    
    - name: Create tar archive (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: tar -czf ${{ matrix.output_name }}.tar.gz -C ./publish/${{ matrix.rid }} .
      working-directory: ./ActiveSense.Desktop
    
    - name: Create tar archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd ./publish/${{ matrix.rid }}
        tar -czf ../../${{ matrix.output_name }}.tar.gz *
      working-directory: ./ActiveSense.Desktop
      shell: bash
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.output_name }}
        path: ./ActiveSense.Desktop/${{ matrix.output_name }}.tar.gz
    
  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only run on main branch push
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Display structure of downloaded files
      run: ls -R
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./activesense-linux-x64/activesense-linux-x64.tar.gz
        asset_name: activesense-linux-x64.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./activesense-windows-x64/activesense-windows-x64.tar.gz
        asset_name: activesense-windows-x64.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./activesense-macos-x64/activesense-macos-x64.tar.gz
        asset_name: activesense-macos-x64.tar.gz
        asset_content_type: application/gzip
