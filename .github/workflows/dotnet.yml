name: CI/CD Pipeline

on:
  push:
    branches: [ '*' ]
  pull_request:


jobs:
  # Job 1: Build and output artifacts for reuse in other jobs
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      build-output: ${{ steps.build-step.outputs.build-result }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false # Security best practice
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        id: build-step
        run: |
          dotnet build --no-restore
          echo "build-result=success" >> $GITHUB_OUTPUT
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            **/bin/
            **/obj/
          retention-days: 1

  # Job 2: Run unit tests
  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          
      - name: Run unit tests
        run: dotnet test --no-build --verbosity normal
        
  # Job 3: Code analysis and linting
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Install dotnet format tool
        run: dotnet tool install -g dotnet-format
        
      - name: Check code formatting
        run: dotnet format --verify-no-changes
        
      - name: Run code analysis
        run: dotnet build --configuration Release /p:EnforceCodeStyleInBuild=true
